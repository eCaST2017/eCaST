@model CTL.Models.Site

@{
    ViewBag.Title = "Edit";
}



<div class="w3-card-2">
    <div style="background-color:#666" class="panel-heading w3-card-2">
        <span style="color:#fff;font-family: 'Roboto', sans-serif; font-size:16px"><i style="color:#fff" class="fa fa-share-alt fa-fw"></i>&nbsp;@ViewBag.SiteName</span>


        <div class="pull-right">
            <button id="SiteBackButton" class="btn btn-default" type="button"><i class="fa fa-chevron-circle-left"></i> Return to Agency Dashboard</button>

            @if (ViewBag.RoleID == 1 || ViewBag.RoleID == 13 || ViewBag.RoleID == 3)
            {

                <text>&nbsp;</text><button id="CancelAgButton" type="button" class="btn btn-default"><span class="glyphicon glyphicon-user"></span>&nbsp;All Agencies</button>
                @*<text>&nbsp;</text><button id="ProviderListButton" type="button" class="btn btn-default"><span class="glyphicon glyphicon-user"></span>&nbsp;Providers</button>*@


            }
        </div>

    </div>
    <!-- /.panel-heading -->
    <div style="background-color:#fff" class="panel-body">


       
        <div class="row">




            <div class="col-md-12">



                <div id="ProgramListSection"></div>


            </div>



                @*<div class="col-md-6">




                    <div id="tableauViz"  \></div>





                </div>*@


            </div>


    </div>

    </div>



<script type="text/javascript">


    $(document).ready(function () {


        $('#ProgramListSection').load('@Url.Action("_ProgramManagement", "Programs", new { id = ViewBag.SiteID })');


    });


    $("#CancelAgButton").click(function () {


        $("#ContentContainer").hide("slide", { direction: "right" }, 500);
        $(".se-pre-con").fadeIn("slow");
        $("#ContentContainer").load("@Url.Action("Index", "AgencySites")",
                                         function (response, status, xhr) {
                                             if (status == "error") {
                                                 //   alert("An error occurred while loading the results.");
                                             }
                                             $("#ContentContainer").show(500);
                                             $(".se-pre-con").fadeOut("slow");
                                         });
    });

    $("#ProviderListButton").click(function () {


        $("#ContentContainer").hide("slide", { direction: "right" }, 500);
        $(".se-pre-con").fadeIn("slow");
        $("#ContentContainer").load("@Url.Action("Index", "Providers")",
                                         function (response, status, xhr) {
                                             if (status == "error") {
                                                 //   alert("An error occurred while loading the results.");
                                             }
                                             $("#ContentContainer").show(500);
                                             $(".se-pre-con").fadeOut("slow");
                                         });
    });
    // Initialise the viz to hold the workbook
    @*function initializeViz() {

        var placeholderDiv = document.getElementById("tableauViz");
        var url = "http://dphe22/t/HealthInformatics/views/AgencyManagement/Dashboard1?Site Name=" + '@ViewBag.SiteName';
        var options = {

            onFirstInteractive: function () {

                viz.refreshDataAsync();
            }
        };
        viz = new tableauSoftware.Viz(placeholderDiv, url, options);

    }*@
</script>

@*<script type='text/javascript'>
    //Initialize the viz after the div is created
    initializeViz();
</script>*@



        <script type="text/javascript">

            $(function () {

                $("#SiteBackButton").click(function () {


                    $("#ContentContainer").hide("slide", { direction: "right" }, 500);
                    $(".se-pre-con").fadeIn("slow");
                    $("#ContentContainer").load("@Url.Action("Edit", "AgencySites", new { id = @ViewBag.AgencySiteID })",
                                                    function (response, status, xhr) {
                                                        if (status == "error") {
                                                            //   alert("An error occurred while loading the results.");
                                                        }


                                                        $("#ContentContainer").show(500);
                                                        $(".se-pre-con").fadeOut("slow");

                                                    });




                });


              



            });



        </script>


        @*<h2>Edit</h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Site</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.SiteID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.SiteName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SiteName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SiteName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SiteCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SiteCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SiteCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CityBinID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CityBinID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityBinID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StateBinID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StateBinID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StateBinID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ZipCodeBinID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ZipCodeBinID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ZipCodeBinID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Active)
                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateUpdated, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateUpdated, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateUpdated, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>*@
