//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CTL.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class eCaSTBillingEntities : DbContext
    {
        public eCaSTBillingEntities()
            : base("name=eCaSTBillingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Contract> Contracts { get; set; }
        public virtual DbSet<Contract_CancerTypes> Contract_CancerTypes { get; set; }
        public virtual DbSet<DD_BillingPaid> DD_BillingPaid { get; set; }
        public virtual DbSet<DD_ContractTypes> DD_ContractTypes { get; set; }
        public virtual DbSet<DD_DetailType> DD_DetailType { get; set; }
        public virtual DbSet<DD_LedgerTypes> DD_LedgerTypes { get; set; }
        public virtual DbSet<DD_LevelRate> DD_LevelRate { get; set; }
        public virtual DbSet<DD_ProcedureRate> DD_ProcedureRate { get; set; }
        public virtual DbSet<FiscalYear> FiscalYears { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<InvoiceDetail> InvoiceDetails { get; set; }
        public virtual DbSet<MasterLedger> MasterLedgers { get; set; }
        public virtual DbSet<PercentFiscalYear> PercentFiscalYears { get; set; }
    
        public virtual int f90Day_BreastClosure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f90Day_BreastClosure");
        }
    
        public virtual int CopyOf_Report_ScreeningBudgetTracking(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> contractType, Nullable<int> fiscalYear, Nullable<decimal> percentFiscalYear)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contractTypeParameter = contractType.HasValue ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(int));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var percentFiscalYearParameter = percentFiscalYear.HasValue ?
                new ObjectParameter("PercentFiscalYear", percentFiscalYear) :
                new ObjectParameter("PercentFiscalYear", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyOf_Report_ScreeningBudgetTracking", startDateParameter, endDateParameter, contractTypeParameter, fiscalYearParameter, percentFiscalYearParameter);
        }
    
        public virtual int CopyOf_Report_ScreeningBudgetTracking_dbg(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> contractType, Nullable<int> fiscalYear, Nullable<decimal> percentFiscalYear)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contractTypeParameter = contractType.HasValue ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(int));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var percentFiscalYearParameter = percentFiscalYear.HasValue ?
                new ObjectParameter("PercentFiscalYear", percentFiscalYear) :
                new ObjectParameter("PercentFiscalYear", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyOf_Report_ScreeningBudgetTracking_dbg", startDateParameter, endDateParameter, contractTypeParameter, fiscalYearParameter, percentFiscalYearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DeleteBill(Nullable<System.DateTime> dateBill, Nullable<int> contractType, string agency)
        {
            var dateBillParameter = dateBill.HasValue ?
                new ObjectParameter("DateBill", dateBill) :
                new ObjectParameter("DateBill", typeof(System.DateTime));
    
            var contractTypeParameter = contractType.HasValue ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(int));
    
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DeleteBill", dateBillParameter, contractTypeParameter, agencyParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> eCaST_Get_FiscalYear_StartDate_By_Agency(Nullable<int> fiscalYear, Nullable<int> agencySiteID, Nullable<int> contractTypeID)
        {
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var agencySiteIDParameter = agencySiteID.HasValue ?
                new ObjectParameter("AgencySiteID", agencySiteID) :
                new ObjectParameter("AgencySiteID", typeof(int));
    
            var contractTypeIDParameter = contractTypeID.HasValue ?
                new ObjectParameter("ContractTypeID", contractTypeID) :
                new ObjectParameter("ContractTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("eCaST_Get_FiscalYear_StartDate_By_Agency", fiscalYearParameter, agencySiteIDParameter, contractTypeIDParameter);
        }
    
        public virtual ObjectResult<eCaST_Get_Percent_ContractTypes_Result> eCaST_Get_Percent_ContractTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<eCaST_Get_Percent_ContractTypes_Result>("eCaST_Get_Percent_ContractTypes");
        }
    
        public virtual ObjectResult<Nullable<decimal>> eCaST_Get_Percent_FiscalYear(Nullable<int> fiscalYear, Nullable<System.DateTime> endDate, Nullable<int> contractType)
        {
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contractTypeParameter = contractType.HasValue ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("eCaST_Get_Percent_FiscalYear", fiscalYearParameter, endDateParameter, contractTypeParameter);
        }
    
        public virtual int Insert_MasterLedger(Nullable<int> contractID, Nullable<int> contractTypeID, Nullable<int> invoiceID, Nullable<int> fiscalYear, string userID, ObjectParameter intKeyID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var contractTypeIDParameter = contractTypeID.HasValue ?
                new ObjectParameter("ContractTypeID", contractTypeID) :
                new ObjectParameter("ContractTypeID", typeof(int));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_MasterLedger", contractIDParameter, contractTypeIDParameter, invoiceIDParameter, fiscalYearParameter, userIDParameter, intKeyID);
        }
    
        public virtual int Insert_MasterLedger_BACKUP_X(Nullable<int> contractID, Nullable<int> contractTypeID, Nullable<int> invoiceID, Nullable<int> fiscalYear, string userID, ObjectParameter intKeyID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var contractTypeIDParameter = contractTypeID.HasValue ?
                new ObjectParameter("ContractTypeID", contractTypeID) :
                new ObjectParameter("ContractTypeID", typeof(int));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_MasterLedger_BACKUP_X", contractIDParameter, contractTypeIDParameter, invoiceIDParameter, fiscalYearParameter, userIDParameter, intKeyID);
        }
    
        public virtual int MasterBilling(string agency, string contractType, Nullable<int> cFiscalYear, Nullable<System.DateTime> dateEnd, string userID, Nullable<bool> yearEnd, ObjectParameter intKeyID)
        {
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var cFiscalYearParameter = cFiscalYear.HasValue ?
                new ObjectParameter("CFiscalYear", cFiscalYear) :
                new ObjectParameter("CFiscalYear", typeof(int));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var yearEndParameter = yearEnd.HasValue ?
                new ObjectParameter("YearEnd", yearEnd) :
                new ObjectParameter("YearEnd", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MasterBilling", agencyParameter, contractTypeParameter, cFiscalYearParameter, dateEndParameter, userIDParameter, yearEndParameter, intKeyID);
        }
    
        public virtual int MasterCleanDuplicateInvoices(ObjectParameter intKeyID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MasterCleanDuplicateInvoices", intKeyID);
        }
    
        public virtual int MasterCleanDuplicateScreens(ObjectParameter intKeyID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MasterCleanDuplicateScreens", intKeyID);
        }
    
        public virtual int MasterCleanNegative(ObjectParameter intKeyID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MasterCleanNegative", intKeyID);
        }
    
        public virtual int MasterProcedures(string agency, string contractType, Nullable<int> detailTypeID, Nullable<int> cFiscalYear, Nullable<System.DateTime> dateEnd, string userID, ObjectParameter intKeyID)
        {
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var detailTypeIDParameter = detailTypeID.HasValue ?
                new ObjectParameter("DetailTypeID", detailTypeID) :
                new ObjectParameter("DetailTypeID", typeof(int));
    
            var cFiscalYearParameter = cFiscalYear.HasValue ?
                new ObjectParameter("CFiscalYear", cFiscalYear) :
                new ObjectParameter("CFiscalYear", typeof(int));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MasterProcedures", agencyParameter, contractTypeParameter, detailTypeIDParameter, cFiscalYearParameter, dateEndParameter, userIDParameter, intKeyID);
        }
    
        public virtual int MasterProcedures_Backup_12162015(string agency, string contractType, Nullable<int> detailTypeID, Nullable<int> cFiscalYear, Nullable<System.DateTime> dateEnd, string userID, ObjectParameter intKeyID)
        {
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var detailTypeIDParameter = detailTypeID.HasValue ?
                new ObjectParameter("DetailTypeID", detailTypeID) :
                new ObjectParameter("DetailTypeID", typeof(int));
    
            var cFiscalYearParameter = cFiscalYear.HasValue ?
                new ObjectParameter("CFiscalYear", cFiscalYear) :
                new ObjectParameter("CFiscalYear", typeof(int));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MasterProcedures_Backup_12162015", agencyParameter, contractTypeParameter, detailTypeIDParameter, cFiscalYearParameter, dateEndParameter, userIDParameter, intKeyID);
        }
    
        public virtual int MasterScreening(string agency, string contractType, Nullable<int> detailTypeID, Nullable<int> cFiscalYear, Nullable<System.DateTime> dateEnd, string userID, ObjectParameter intKeyID)
        {
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var detailTypeIDParameter = detailTypeID.HasValue ?
                new ObjectParameter("DetailTypeID", detailTypeID) :
                new ObjectParameter("DetailTypeID", typeof(int));
    
            var cFiscalYearParameter = cFiscalYear.HasValue ?
                new ObjectParameter("CFiscalYear", cFiscalYear) :
                new ObjectParameter("CFiscalYear", typeof(int));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MasterScreening", agencyParameter, contractTypeParameter, detailTypeIDParameter, cFiscalYearParameter, dateEndParameter, userIDParameter, intKeyID);
        }
    
        public virtual int MasterScreening_BK_X(string agency, string contractType, Nullable<int> detailTypeID, Nullable<System.DateTime> dateEnd, string userID, ObjectParameter intKeyID)
        {
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var detailTypeIDParameter = detailTypeID.HasValue ?
                new ObjectParameter("DetailTypeID", detailTypeID) :
                new ObjectParameter("DetailTypeID", typeof(int));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MasterScreening_BK_X", agencyParameter, contractTypeParameter, detailTypeIDParameter, dateEndParameter, userIDParameter, intKeyID);
        }
    
        public virtual int Procedure_Rules(Nullable<int> clientID, Nullable<int> procedureID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var procedureIDParameter = procedureID.HasValue ?
                new ObjectParameter("ProcedureID", procedureID) :
                new ObjectParameter("ProcedureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure_Rules", clientIDParameter, procedureIDParameter);
        }
    
        public virtual ObjectResult<Report_Clients_Served_Bundled_Reimbursement_Level_Result> Report_Clients_Served_Bundled_Reimbursement_Level(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> state, string siteList, string clinicIDs, string contractType)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(bool));
    
            var siteListParameter = siteList != null ?
                new ObjectParameter("SiteList", siteList) :
                new ObjectParameter("SiteList", typeof(string));
    
            var clinicIDsParameter = clinicIDs != null ?
                new ObjectParameter("ClinicIDs", clinicIDs) :
                new ObjectParameter("ClinicIDs", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_Clients_Served_Bundled_Reimbursement_Level_Result>("Report_Clients_Served_Bundled_Reimbursement_Level", startDateParameter, endDateParameter, stateParameter, siteListParameter, clinicIDsParameter, contractTypeParameter);
        }
    
        public virtual ObjectResult<Report_GrantActivity_Result> Report_GrantActivity(string agency, string contractType, Nullable<System.DateTime> dateEnd, Nullable<int> fiscalYear, Nullable<int> clientLevel, string userID, ObjectParameter intKeyID)
        {
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var clientLevelParameter = clientLevel.HasValue ?
                new ObjectParameter("ClientLevel", clientLevel) :
                new ObjectParameter("ClientLevel", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_GrantActivity_Result>("Report_GrantActivity", agencyParameter, contractTypeParameter, dateEndParameter, fiscalYearParameter, clientLevelParameter, userIDParameter, intKeyID);
        }
    
        public virtual ObjectResult<Report_GrantActivityWeb_Result> Report_GrantActivityWeb(string agency, string contractType, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<int> fiscalYear, Nullable<int> clientLevel)
        {
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var clientLevelParameter = clientLevel.HasValue ?
                new ObjectParameter("ClientLevel", clientLevel) :
                new ObjectParameter("ClientLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_GrantActivityWeb_Result>("Report_GrantActivityWeb", agencyParameter, contractTypeParameter, dateStartParameter, dateEndParameter, fiscalYearParameter, clientLevelParameter);
        }
    
        public virtual ObjectResult<Report_GrantActivityWebFull_Result> Report_GrantActivityWebFull(string contractType, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<int> fiscalYear, Nullable<int> clientLevel)
        {
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var clientLevelParameter = clientLevel.HasValue ?
                new ObjectParameter("ClientLevel", clientLevel) :
                new ObjectParameter("ClientLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_GrantActivityWebFull_Result>("Report_GrantActivityWebFull", contractTypeParameter, dateStartParameter, dateEndParameter, fiscalYearParameter, clientLevelParameter);
        }
    
        public virtual int Report_ScreeningBudgetTracking(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> contractID, Nullable<int> fiscalYear, Nullable<decimal> percentFiscalYear)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var percentFiscalYearParameter = percentFiscalYear.HasValue ?
                new ObjectParameter("PercentFiscalYear", percentFiscalYear) :
                new ObjectParameter("PercentFiscalYear", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report_ScreeningBudgetTracking", startDateParameter, endDateParameter, contractIDParameter, fiscalYearParameter, percentFiscalYearParameter);
        }
    
        public virtual int Report_ScreeningBudgetTrackingWeb(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> contractType, Nullable<int> fiscalYear, Nullable<decimal> percentFiscalYear, Nullable<int> agencyID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contractTypeParameter = contractType.HasValue ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(int));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var percentFiscalYearParameter = percentFiscalYear.HasValue ?
                new ObjectParameter("PercentFiscalYear", percentFiscalYear) :
                new ObjectParameter("PercentFiscalYear", typeof(decimal));
    
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report_ScreeningBudgetTrackingWeb", startDateParameter, endDateParameter, contractTypeParameter, fiscalYearParameter, percentFiscalYearParameter, agencyIDParameter);
        }
    
        public virtual ObjectResult<Report_ScreeningBudgetTrackingWeb_APP_Result> Report_ScreeningBudgetTrackingWeb_APP(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> contractType, Nullable<int> fiscalYear, Nullable<decimal> percentFiscalYear, Nullable<int> agencyID, Nullable<bool> stateStaff)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contractTypeParameter = contractType.HasValue ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(int));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            var percentFiscalYearParameter = percentFiscalYear.HasValue ?
                new ObjectParameter("PercentFiscalYear", percentFiscalYear) :
                new ObjectParameter("PercentFiscalYear", typeof(decimal));
    
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(int));
    
            var stateStaffParameter = stateStaff.HasValue ?
                new ObjectParameter("StateStaff", stateStaff) :
                new ObjectParameter("StateStaff", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_ScreeningBudgetTrackingWeb_APP_Result>("Report_ScreeningBudgetTrackingWeb_APP", startDateParameter, endDateParameter, contractTypeParameter, fiscalYearParameter, percentFiscalYearParameter, agencyIDParameter, stateStaffParameter);
        }
    
        public virtual int Reset_BillingLevels(Nullable<System.DateTime> dateEnd, Nullable<int> cFiscalYear)
        {
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var cFiscalYearParameter = cFiscalYear.HasValue ?
                new ObjectParameter("CFiscalYear", cFiscalYear) :
                new ObjectParameter("CFiscalYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reset_BillingLevels", dateEndParameter, cFiscalYearParameter);
        }
    
        public virtual int Return_SelectedItems(string itemValue)
        {
            var itemValueParameter = itemValue != null ?
                new ObjectParameter("ItemValue", itemValue) :
                new ObjectParameter("ItemValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Return_SelectedItems", itemValueParameter);
        }
    
        public virtual int Screening_Rules(Nullable<int> clientID, Nullable<int> screeningID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var screeningIDParameter = screeningID.HasValue ?
                new ObjectParameter("ScreeningID", screeningID) :
                new ObjectParameter("ScreeningID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Screening_Rules", clientIDParameter, screeningIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Set_Adjustments(Nullable<int> clientID, Nullable<int> contractID, Nullable<int> cancerTypeID, Nullable<int> invoiceID, Nullable<int> detailTypeID, Nullable<int> detailID, Nullable<decimal> setRate, ObjectParameter rate)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var cancerTypeIDParameter = cancerTypeID.HasValue ?
                new ObjectParameter("CancerTypeID", cancerTypeID) :
                new ObjectParameter("CancerTypeID", typeof(int));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var detailTypeIDParameter = detailTypeID.HasValue ?
                new ObjectParameter("DetailTypeID", detailTypeID) :
                new ObjectParameter("DetailTypeID", typeof(int));
    
            var detailIDParameter = detailID.HasValue ?
                new ObjectParameter("DetailID", detailID) :
                new ObjectParameter("DetailID", typeof(int));
    
            var setRateParameter = setRate.HasValue ?
                new ObjectParameter("SetRate", setRate) :
                new ObjectParameter("SetRate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Set_Adjustments", clientIDParameter, contractIDParameter, cancerTypeIDParameter, invoiceIDParameter, detailTypeIDParameter, detailIDParameter, setRateParameter, rate);
        }
    
        public virtual int Set_Adjustments_CCGP(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Set_Adjustments_CCGP", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Set_Allocations(Nullable<int> contractID, Nullable<int> contractTypeID, Nullable<int> invoiceID, Nullable<decimal> rate, ObjectParameter paid, ObjectParameter rateFederal, ObjectParameter rateState)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(int));
    
            var contractTypeIDParameter = contractTypeID.HasValue ?
                new ObjectParameter("ContractTypeID", contractTypeID) :
                new ObjectParameter("ContractTypeID", typeof(int));
    
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Set_Allocations", contractIDParameter, contractTypeIDParameter, invoiceIDParameter, rateParameter, paid, rateFederal, rateState);
        }
    
        public virtual int Update_ScreeningAlreadyPaid(Nullable<int> cFiscalYear, ObjectParameter intKeyID)
        {
            var cFiscalYearParameter = cFiscalYear.HasValue ?
                new ObjectParameter("CFiscalYear", cFiscalYear) :
                new ObjectParameter("CFiscalYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_ScreeningAlreadyPaid", cFiscalYearParameter, intKeyID);
        }
    
        public virtual int Update_ScreeningPaid(Nullable<int> screeningID, Nullable<int> paid)
        {
            var screeningIDParameter = screeningID.HasValue ?
                new ObjectParameter("ScreeningID", screeningID) :
                new ObjectParameter("ScreeningID", typeof(int));
    
            var paidParameter = paid.HasValue ?
                new ObjectParameter("Paid", paid) :
                new ObjectParameter("Paid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_ScreeningPaid", screeningIDParameter, paidParameter);
        }
    
        public virtual int Update_ScreeningProcedurePaid(Nullable<int> screenProcedureID, Nullable<int> paid)
        {
            var screenProcedureIDParameter = screenProcedureID.HasValue ?
                new ObjectParameter("ScreenProcedureID", screenProcedureID) :
                new ObjectParameter("ScreenProcedureID", typeof(int));
    
            var paidParameter = paid.HasValue ?
                new ObjectParameter("Paid", paid) :
                new ObjectParameter("Paid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_ScreeningProcedurePaid", screenProcedureIDParameter, paidParameter);
        }
    }
}
