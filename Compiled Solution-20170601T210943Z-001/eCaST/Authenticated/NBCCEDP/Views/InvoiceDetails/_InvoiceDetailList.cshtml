@model IEnumerable<eCaST.ViewModels.InvoiceDetailViewModel>



<script type="text/javascript" charset="utf-8">
    (function ($) {
        /*
         * Function: fnGetColumnData
         * Purpose:  Return an array of table values from a particular column.
         * Returns:  array string: 1d data array
         * Inputs:   object:oSettings - dataTable settings object. This is always the last argument past to the function
         *           int:iColumn - the id of the column to extract the data from
         *           bool:bUnique - optional - if set to false duplicated values are not filtered out
         *           bool:bFiltered - optional - if set to false all the table data is used (not only the filtered)
         *           bool:bIgnoreEmpty - optional - if set to false empty values are not filtered from the result array
         * Author:   Benedikt Forchhammer <b.forchhammer /AT\ mind2.de>
         */
        $.fn.dataTableExt.oApi.fnGetColumnData = function (oSettings, iColumn, bUnique, bFiltered, bIgnoreEmpty) {
            // check that we have a column id
            if (typeof iColumn == "undefined") return new Array();

            // by default we only want unique data
            if (typeof bUnique == "undefined") bUnique = true;

            // by default we do want to only look at filtered data
            if (typeof bFiltered == "undefined") bFiltered = true;

            // by default we do not want to include empty values
            if (typeof bIgnoreEmpty == "undefined") bIgnoreEmpty = true;

            // list of rows which we're going to loop through
            var aiRows;

            // use only filtered rows
            if (bFiltered == true) aiRows = oSettings.aiDisplay;
                // use all rows
            else aiRows = oSettings.aiDisplayMaster; // all row numbers

            // set up data array
            var asResultData = new Array();

            for (var i = 0, c = aiRows.length; i < c; i++) {
                iRow = aiRows[i];
                var aData = this.fnGetData(iRow);
                var sValue = aData[iColumn];

                // ignore empty values?
                if (bIgnoreEmpty == true && sValue.length == 0) continue;

                    // ignore unique values?
                else if (bUnique == true && jQuery.inArray(sValue, asResultData) > -1) continue;

                    // else push the value onto the result data array
                else asResultData.push(sValue);
            }

            return asResultData;
        }
    }(jQuery));


    function fnCreateSelect(aData) {
        var r = '<div class="input-control select"><select style="font-size:11px"><option value="">--Show All--</option>', i, iLen = aData.length;
        for (i = 0 ; i < iLen ; i++) {
            r += '<option value="' + aData[i] + '">' + aData[i] + '</option>';
        }
        var b = "  <span style='font-size:11px'></span>  ";
        return b + r + '</select></div>';
    }


    $(document).ready(function () {
        /* Initialise the DataTable */
        var oIDTable = $('#example_@ViewBag.MessageID@ViewBag.ScreeningID').dataTable({
            "oLanguage": {
                "sSearch": "Search:"
            },
            "bPaginate": false,
            "bSort": false,
            "bAutoWidth": false,
            //"aoColumnDefs": [{ "bVisible": false, "aTargets": [2] }],
            "bFilter": false,
            "bInfo": false,
            "aoColumnDefs": [{ "bVisible": false, "aTargets": [4] }],
            "fnDrawCallback": function (oSettings) {
                for (var i = 0, iLen = oSettings.aoData.length ; i < iLen ; i++) {
                    var status = oSettings.aoData[i]._aData[2];
                    var colorCSS;
                    if (status == '23') {
                        colorCSS = 'statusGreen';
                    } else if (status === '4' || status === '12') {
                        colorCSS = 'statusBlue';
                    } else if (status === '1' || status === '2' || status === '11') {
                        colorCSS = 'statusRed';
                    } else if (status === '3' || status === '7' || status === '14') {
                        colorCSS = 'statusOrange';
                    } else {
                        colorCSS = 'statusBlack';
                    }
                    oSettings.aoData[i].nTr.className += " " + colorCSS;
                }
            },
            
        });
        oIDTable.fnSort([[4, 'asc']]); // Sort by first column descending
       
    });
</script>






<div id="holder">
    <table style="width:100%;color:#ccc;font-size:18px; font-family:'Lato', sans-serif" cellpadding="0" cellspacing="0" border="0" class="display" id="example_@ViewBag.MessageID@ViewBag.ScreeningID">
        <thead>
            <tr>
                <th class="Group">Invoice ID</th>
                <th>Type</th>
                <th>Billing Level</th>
              
                <th>Total Allocation</th>
                <th></th>
                <th>Date</th>
                <th>FY</th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {



            <tr>


                <td style="border:none">

                    @item.InvoiceID

                </td>

                <td style="border:none">

                    @item.ContractType

                </td>


                <td style="border:none">

                    @item.BillingLevel

                </td>



                <td style="border:none">


                    @item.TotalAllocation


                </td>


                <td style="border:none">


                    @item.DateCreated


                </td>


                <td style="border:none">





                    @String.Format("{0:MM/dd/yyyy}", item.DateCreated)


                </td>

                <td style="border:none">





                    @item.FiscalYear


                </td>

            </tr>



        }
    </table>
    <br />




</div>


