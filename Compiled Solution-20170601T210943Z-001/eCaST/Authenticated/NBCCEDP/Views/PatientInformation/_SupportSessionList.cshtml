@model IEnumerable<eCaST.ViewModels.SupportSessionViewModel>



<style type="text/css">
    table.dataTable td.sorting_1 {
        background-color: white;
        border: 1px lightgrey;
    }

    table.dataTable td {
        background-color: white;
        border: 1px lightgrey;
    }

    table.dataTable tr.odd {
        background-color: white;
        border: 1px lightgrey;
    }

    table.dataTable tr.even {
        background-color: white;
        border: 1px lightgrey;
    }

    .statusBlack {
        color: black;
    }

    .statusRed {
        color: red;
    }

    .statusBlue {
        color: orange;
    }

    .statusGreen {
        color: limegreen;
    }

    .statusOrange {
        color: goldenrod;
    }
</style>


<br />
<div id="holder">
    <table style="width:100%;color:#666;font-size:16px; font-family:'Lato', sans-serif" cellpadding="0" cellspacing="0" border="0" class="display" id="exampleSS">
        <thead>
            <tr>
                <th></th>
                <th class="Group">Date</th>
                <th>Session Type</th>
                <th>Type of Contact</th>
                <th>Setting</th>

                <th></th>

            </tr>
        </thead>
        @foreach (var item in Model)
        {



            <tr style="color:gray">

                <td style="border:none">

                    <div class="glyphicon glyphicon-pencil btn btn-default" id='EditSSButton_@item.HBSupportSessionID' style="text-decoration:none; cursor:pointer"></div>

                </td>
                <td style="border:none">


                    @(((DateTime)item.HBSupportSessionDate).ToString("MM/dd/yyyy"))


                </td>


                <td style="border:none">



                    @item.HBSessionTypeBinName


                </td>

                <td style="border:none">


                    @item.HBSessionContactTypeBinName

                </td>



                <td style="border:none">


                    @item.HBSessionSettingTypeBinName


                    @if (item.HBSessionTypeBinID == 1)
                    {
                        
                        <text>/ Session #:</text> @item.HBSessionNumberTypeBinName
                       <text>Curriculum:</text> @item.HBSessionCurriculumTypeBinName


                    }



                </td>


                <td style="border:none">





                    @if (ViewBag.PowerUser == 1)
                    {

                        //data-toggle="modal" data-target="#SS_@item.HBSupportSessionID"
                        <div class="glyphicon glyphicon-trash btn btn-default" id='DeleteSSButton_@item.HBSupportSessionID' style="text-decoration:none; cursor:pointer"></div>

                    }

                    <!-- Delete Modal -->
                    <div class="modal fade" id="SS_@item.HBSupportSessionID" tabindex="-1" role="dialog" aria-labelledby="myModalLabelSS" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h3 class="modal-title" id="myModalLabelSS"> Are you sure you want to delete this @item.HBSessionTypeBinName session?</h3>
                                </div>

                                <div id="DeleteSSContainer_@item.HBSupportSessionID"></div>

                                @*   @{ Html.RenderAction("_DeleteTest", "PatientInformation", new { id = @ViewBag.CCID, id2 = @ViewBag.SiteID, id3 = @ViewBag.ScreeningTypeID, id4 = @ViewBag.CLID, id5 = @ViewBag.EnrollID, id6 = @ViewBag.ScreeningID, id7 = @item.ScreenProcedureID });}*@



                            </div>
                        </div>
                    </div>


                    <!-- Edit Modal -->
                    <div class="modal fade" id="EditSS_@item.HBSupportSessionID" tabindex="-1" role="dialog" aria-labelledby="myModalLabelSSS" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h3 class="modal-title" id="myModalLabelSSS"> Edit the @item.HBSessionTypeBinName Session</h3>
                                </div>

                                <div id="EditSSContainer_@item.HBSupportSessionID"></div>

                                @*   @{ Html.RenderAction("_DeleteTest", "PatientInformation", new { id = @ViewBag.CCID, id2 = @ViewBag.SiteID, id3 = @ViewBag.ScreeningTypeID, id4 = @ViewBag.CLID, id5 = @ViewBag.EnrollID, id6 = @ViewBag.ScreeningID, id7 = @item.ScreenProcedureID });}*@



                            </div>
                        </div>
                    </div>



                    <script type="text/javascript">


                        $("#DeleteSSButton_@item.HBSupportSessionID").click(function () {


                            $('#SupportSessionListSection').load('@Url.Action("_DeleteSession", "PatientInformation", new { id = ViewBag.ScreeningID, id2 = @item.HBSupportSessionID })');
                            $("#NewSSButton").css("display", "none");

                        });


                        $("#EditSSButton_@item.HBSupportSessionID").click(function () {


                           
                            $('#SupportSessionListSection').load('@Url.Action("_UpdateSupportSession", "PatientInformation", new { id = ViewBag.ScreeningID, id2 = @item.HBSupportSessionID })');
                            $("#NewSSButton").css("display", "none");

                          


                        });




                    </script>









                </td>


            </tr>


           



        }
    </table>
    <br />




</div>



<script type="text/javascript" charset="utf-8">
    (function ($) {
        /*
         * Function: fnGetColumnData
         * Purpose:  Return an array of table values from a particular column.
         * Returns:  array string: 1d data array
         * Inputs:   object:oSettings - dataTable settings object. This is always the last argument past to the function
         *           int:iColumn - the id of the column to extract the data from
         *           bool:bUnique - optional - if set to false duplicated values are not filtered out
         *           bool:bFiltered - optional - if set to false all the table data is used (not only the filtered)
         *           bool:bIgnoreEmpty - optional - if set to false empty values are not filtered from the result array
         * Author:   Benedikt Forchhammer <b.forchhammer /AT\ mind2.de>
         */
        $.fn.dataTableExt.oApi.fnGetColumnData = function (oSettings, iColumn, bUnique, bFiltered, bIgnoreEmpty) {
            // check that we have a column id
            if (typeof iColumn == "undefined") return new Array();

            // by default we only want unique data
            if (typeof bUnique == "undefined") bUnique = true;

            // by default we do want to only look at filtered data
            if (typeof bFiltered == "undefined") bFiltered = true;

            // by default we do not want to include empty values
            if (typeof bIgnoreEmpty == "undefined") bIgnoreEmpty = true;

            // list of rows which we're going to loop through
            var aiRows;

            // use only filtered rows
            if (bFiltered == true) aiRows = oSettings.aiDisplay;
                // use all rows
            else aiRows = oSettings.aiDisplayMaster; // all row numbers

            // set up data array
            var asResultData = new Array();

            for (var i = 0, c = aiRows.length; i < c; i++) {
                iRow = aiRows[i];
                var aData = this.fnGetData(iRow);
                var sValue = aData[iColumn];

                // ignore empty values?
                if (bIgnoreEmpty == true && sValue.length == 0) continue;

                    // ignore unique values?
                else if (bUnique == true && jQuery.inArray(sValue, asResultData) > -1) continue;

                    // else push the value onto the result data array
                else asResultData.push(sValue);
            }

            return asResultData;
        }
    }(jQuery));


    function fnCreateSelectSS(aData) {
        var r = '<div class="input-control select"><select style="font-size:11px"><option value="">--Show All--</option>', i, iLen = aData.length;
        for (i = 0 ; i < iLen ; i++) {
            r += '<option value="' + aData[i] + '">' + aData[i] + '</option>';
        }
        var b = "  <span style='font-size:11px'></span>  ";
        return b + r + '</select></div>';
    }


    $(document).ready(function () {
        /* Initialise the DataTable */
        var oTable = $('#exampleSS').dataTable({
            "oLanguage": {
                "sSearch": "Search:"
            },
            "bPaginate": false,
            "bSort": false,
            "bAutoWidth": false,
            //"aoColumnDefs": [{ "bVisible": false, "aTargets": [2] }],
            "bFilter": false,
            "bInfo": false,
            //"fnDrawCallback": function (oSettings) {
            //    for (var i = 0, iLen = oSettings.aoData.length ; i < iLen ; i++) {
            //        var status = oSettings.aoData[i]._aData[2];
            //        var colorCSS;
            //        if (status == '23') {
            //            colorCSS = 'statusGreen';
            //        } else if (status === '4' || status === '12') {
            //            colorCSS = 'statusBlue';
            //        } else if (status === '1' || status === '2' || status === '11') {
            //            colorCSS = 'statusRed';
            //        } else if (status === '3' || status === '7' || status === '14') {
            //            colorCSS = 'statusOrange';
            //        } else {
            //            colorCSS = 'statusBlack';
            //        }
            //        oSettings.aoData[i].nTr.className += " " + colorCSS;
            //    }
            //},
            //"aoColumnDefs": [{ "bVisible": false, "aTargets": [0] }]
        });

        /* Add a select menu for each TH element in the table footer */
        //$(".Group").each(function (i) {
        //    this.innerHTML = fnCreateSelectSS(oTable.fnGetColumnData(i));
        //    $('select', this).change(function () {
        //        oTable.fnFilter($(this).val(), i);
        //    });
        //});
    });
</script>