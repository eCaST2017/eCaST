@model eCaST.ViewModels.SupportSessionViewModel


<link href="@Url.Content("~/Content/slider.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/jquery.ui.slider.css")" rel="stylesheet" type="text/css" />


<script src="@Url.Content("~/Scripts/bootstrap-slider.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/app/patientinfo.js")" type="text/javascript"></script>


<style type="text/css">
    .txtdiv {
        /*width: 130px;
        height: 50px;*/
        -ms-transform: rotate(270deg); /* IE 9 */
        -moz-transform: rotate(270deg); /* Firefox */
        -webkit-transform: rotate(270deg); /* Safari and Chrome */
        -o-transform: rotate(270deg); /* Opera */
    }

    .clsDatePicker {
        z-index: 100000;
    }
</style>


@using (Html.BeginForm("_AddSupportSessionF", "PatientInformation", FormMethod.Post, new { id = "EditSessionInfoForm" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <table style="width:100%; padding:2px">


        @*<tr>
            <td style="border:none">

                <div class="input-group">
                    <label for="HBReferralDateHIDDEN">Referral Date for the DPP/HC Support Session(s)</label>
                    <input style="color:#ccc; width:300px" type="text" id="HBReferralDateHIDDEN" placeholder="Date of Referral for Session">



                </div>




            </td>

        </tr>*@


        <tr>

            <td style="border:none">
                <br />
                <div>Completion status</div>
                <br />
                <div>




                    @Html.DropDownListFor(model => model.HBSessionCompletionTypeBinID, ((IEnumerable<eCaST.Models.DDHBCompletionTypeBin>)ViewBag.DDHBSessionCompletionTypeBinIDs).Select(option => new SelectListItem
                     {
                         //Text = Html.DisplayTextFor(_ => option).ToString(),
                         Text = option.HBSessionCompletionTypeBinName,
                         Value = option.HBSessionCompletionTypeBinID.ToString(),
                         Selected = (Model != null) && (option.HBSessionCompletionTypeBinID == @ViewBag.HBSessionCompletionTypeBinID)
                     }), "Choose...", new { @id = "HBSessionCompletionTypeBinID", @class = "requiredSelect" })
                    @Html.ValidationMessageFor(model => model.HBSessionCompletionTypeBinID)


                </div>

                <br />
                <br />


                <div id="BarrierSection" style="display:none">
                    <div>Primary Barrier to completion</div>
                    <br />
                    <div>




                        @Html.DropDownListFor(model => model.HBSessionBarrierTypeBinID, ((IEnumerable<eCaST.Models.DDHBBarrierTypeBin>)ViewBag.DDHBSessionBarrierTypeBinIDs).Select(option => new SelectListItem
                     {
                         //Text = Html.DisplayTextFor(_ => option).ToString(),
                         Text = option.HBSessionBarrierTypeBinName,
                         Value = option.HBSessionBarrierTypeBinID.ToString(),
                         Selected = (Model != null) && (option.HBSessionBarrierTypeBinID == @ViewBag.HBSessionBarrierTypeBinID)
                     }), "Choose...", new { @id = "HBSessionBarrierTypeBinID", @class = "requiredSelect" })
                        @Html.ValidationMessageFor(model => model.HBSessionBarrierTypeBinID)


                    </div>

                </div>



            </td>

        </tr>



        @*<tr>

                <td style="border:none">

                    <div>Setting for this Session</div>
                    <br />
                    <div>




                        @Html.DropDownListFor(model => model.HBSessionSettingTypeBinID, ((IEnumerable<eCaST.Models.DDHBSettingTypeBin>)ViewBag.DDHBSettingTypeBinIDs).Select(option => new SelectListItem
                             {
                                 //Text = Html.DisplayTextFor(_ => option).ToString(),
                                 Text = option.HBSessionSettingTypeBinName,
                                 Value = option.HBSessionSettingTypeBinID.ToString(),
                                 Selected = (Model != null) && (option.HBSessionSettingTypeBinID == Model.HBSessionSettingTypeBinID)
                             }), "Choose...", new { @id = "HBSessionSettingTypeBinID", @class = "requiredSelect" })
                            @Html.ValidationMessageFor(model => model.HBSessionSettingTypeBinID)


                    </div>

                    <br />
                    <br />

                </td>

            </tr>*@

        @*<tr>

                <td style="border:none">

                    <div>Curriculum for this Session</div>
                    <br />
                    <div>




                        @Html.DropDownListFor(model => model.HBSessionCurriculumTypeBinID, ((IEnumerable<eCaST.Models.DDHBCurriculumTypeBin>)ViewBag.DDHBCurriculumTypeBinIDs).Select(option => new SelectListItem
                             {
                                 //Text = Html.DisplayTextFor(_ => option).ToString(),
                                 Text = option.HBSessionCurriculumTypeBinName,
                                 Value = option.HBSessionCurriculumTypeBinID.ToString(),
                                 Selected = (Model != null) && (option.HBSessionCurriculumTypeBinID == Model.HBSessionCurriculumTypeBinID)
                             }), "Choose...", new { @id = "HBSessionCurriculumTypeBinID", @class = "requiredSelect" })
                            @Html.ValidationMessageFor(model => model.HBSessionCurriculumTypeBinID)


                    </div>

                    <br />
                    <br />

                </td>

            </tr>*@



    </table>



    <div align="right">
        <button id="CancelSSButton" type="reset" class="btn btn-default">Cancel</button>   <button id="UpdateSIButton" class="btn btn-success">Update</button>
    </div>

    <hr class="style-two" />

    @Html.Hidden("Saveid", 3)
    @Html.Hidden("CCID", (int?)ViewBag.CCID)
    @Html.Hidden("ClientID", (int?)ViewBag.CLID)
    @Html.Hidden("SiteID", (int?)ViewBag.SiteID)
    @Html.Hidden("ScreeningTypeID", (int?)ViewBag.ScreeningTypeID)
    @Html.Hidden("EnrollID", (int?)ViewBag.EnrollID)
    @Html.Hidden("ScreeningID", (int?)ViewBag.ScreeningID)
    @Html.Hidden("HBReferralDate")
    @Html.Hidden("SupportSessionID", (int?)ViewBag.SessionTypeBinID)
    

}

<script type="text/javascript">


    //$(function () {

    //    $("#HBSessionCompletionTypeBinID").change(function () {


    //        // 52
    //        if ($("#HBSessionCompletionTypeBinID").val() != 5){

    //            //alert('wtf');
    //            //$("#HBSessionBarrierTypeBinID").val(-1);
    //            //$("#HBSessionBarrierTypeBinID option[value=" + -1 + "]").attr("selected", "selected");
    //            //$("#HBSessionBarrierTypeBinID").prop('selectedIndex', 0);
    //            //$("#HBSessionBarrierTypeBinID").val($("##HBSessionBarrierTypeBinID option:first").val());
    //            //$("#HBSessionBarrierTypeBinID option:first").attr('selected', 'selected');
    //            //$("#HBSessionBarrierTypeBinID")[0].selectedIndex = 0;


    //    }


    //    });





    //  });




    $(document).ready(function () {



        (function ($) {

            $.fn.extend({
                detachOptions: function (o) {
                    var s = this;
                    return s.each(function () {
                        var d = s.data('selectOptions') || [];
                        s.find(o).each(function () {
                            d.push($(this).detach());
                        });
                        s.data('selectOptions', d);
                    });
                }, attachOptions: function (o) {
                    var s = this;
                    return s.each(function () {
                        var d = s.data('selectOptions') || [];
                        for (var i in d) {
                            if (d[i].is(o)) {
                                s.append(d[i]);
                                //console.log(d[i]);
                                // TODO: remove option from data array
                            }
                        }
                    });
                }
            });

        })(jQuery);


        $("#HBSessionCompletionTypeBinID").select2({ width: "30%" });
        $("#HBSessionBarrierTypeBinID").select2({ width: "30%" });

        $('#HBSessionCompletionTypeBinID').detachOptions('[value=1]');
        $('#HBSessionCompletionTypeBinID').detachOptions('[value=6]');




    });


    $("#UpdateSIButton").click(function () {


        //Set Completion Date
        // var siDate = $("#HBReferralDateHIDDEN").val();
        //   document.getElementById("HBReferralDate").value = siDate;
        $("#SaveBarSection").css("display", "block");
        $("#NewSSButton").css("display", "block");


    });



    //$('#HBSessionCompletionTypeBinID').on('change', function () {

    //    var theText = "Choose...";
    //   $("#HBSessionBarrierTypeBinID option:contains(" + theText + ")").attr('selected', 'selected');
    //    $("#HBSessionBarrierTypeBinID").selectmenu('refresh');


    //});




    @* $(function () {

        $('#AddSessionForm').on("submit", function (evt) {
            evt.preventDefault();

            $.ajax({
                url: $("#AddSessionForm").attr('action'),
                type: $("#AddSessionForm").attr('method'),
                contentType: "application/x-www-form-urlencoded;charset=utf-8",
                data: $("#AddSessionForm").serialize(),
                success: function (data) {

                    var clinicalcycleid = data.Modified;
                    var siteid = data.Modified2;
                    var screeningtypeid = data.Modified3;
                    var clientid = data.Modified4;
                    var enrollid = data.Modified5;
                    var screeningid = data.Modified6;

                    $('#SessionInfoSection').load('@Url.Action("_SessionInfo", "PatientInformation")', { id: clinicalcycleid, id2: siteid, id3: screeningtypeid, id4: clientid, id5: enrollid, id6: screeningid });
                    toastr.success('You have successfully updated session information.')






                }
            });


        });

    });*@


    $("#CancelSSButton").click(function () {

        $('#SessionInfoSection').load('@Url.Action("_SessionInfo", "PatientInformation", new { id = ViewBag.ScreeningID })');
        $("#SaveBarSection").css("display", "block");
        $("#NewSSButton").css("display", "block");
    });

    (function ($) {
        $.fn.extend({
            detachOptions: function (o) {
                var s = this;
                return s.each(function () {
                    var d = s.data('selectOptions') || [];
                    s.find(o).each(function () {
                        d.push($(this).detach());
                    });
                    s.data('selectOptions', d);
                });
            }, attachOptions: function (o) {
                var s = this;
                return s.each(function () {
                    var d = s.data('selectOptions') || [];
                    for (var i in d) {
                        if (d[i].is(o)) {
                            s.append(d[i]);
                            //console.log(d[i]);
                            // TODO: remove option from data array
                        }
                    }
                });
            }
        });

    })(jQuery);


    $(function () {



        if ('@ViewBag.Completeness' == 1 ) {

            //ReAttach Options
            $('#HBSessionCompletionTypeBinID').attachOptions('[value=1]');

        }
        else {

            //detach Options
            $('#HBSessionCompletionTypeBinID').detachOptions('[value=1]');

        }



        if ('@ViewBag.HCSessionCount' > 2 ) {
            
            //ReAttach Options
          //  $('#HBSessionCompletionTypeBinID').detachOptions('[value=5]');
            $("#HBSessionCompletionTypeBinID option[value='5']").remove();
        }
        else {

            //detach Options
          //  $('#HBSessionCompletionTypeBinID').attachOptions('[value=5]');

        }

        if ('@ViewBag.CMSessionCount' > 3 ) {

            //detach Options
            $("#HBSessionCompletionTypeBinID option[value='5']").remove();
           // $('#HBSessionCompletionTypeBinID').detachOptions('[value=5]');

        }
        else {

            //attach Options
           // $('#HBSessionCompletionTypeBinID').attachOptions('[value=5]');

        }

        if ('@ViewBag.DPPSessionCount' > 16) {

            //detach Options
            $("#HBSessionCompletionTypeBinID option[value='5']").remove();
           // $('#HBSessionCompletionTypeBinID').detachOptions('[value=5]');

        }
        else {

            //attach Options
          //  $('#HBSessionCompletionTypeBinID').attachOptions('[value=5]');

        }

        if ('@ViewBag.HCSessionCount' > 0 || '@ViewBag.DPPSessionCount' > 0 || '@ViewBag.CMSessionCount' > 0) {

            //ReAttach Options
            $("#HBSessionCompletionTypeBinID option[value='6']").remove();
           // $('#HBSessionCompletionTypeBinID').detachOptions('[value=6]');

        }
        else {

            //detach Options
           // $('#HBSessionCompletionTypeBinID').attachOptions('[value=6]');

        }


    });


</script>



<script type="text/javascript">


    $(function () {

        var checkCompFieldSelected = function () {
            return $("#HBSessionCompletionTypeBinID").val() == 5;
        };

        var checkCompHBFieldSelected = function () {
            return $("#HBSessionCompletionTypeBinID").val() != -1;
        };

        @*   var checkSNFieldSelected = function () {
            return $("#HBSessionNumberTypeBinID").val() != -1 || $("#HBSessionTypeBinID").val() == 1 || $("#HBSessionNumberTypeBinID").val() == '@ViewBag.SESSIONNUMBERMAX' || $("#HBSessionNumberTypeBinID").val() == 1 || $("#HBSessionNumberTypeBinID").val() == 22;
        };*@

        var checkSNFieldSelected = function () {
            return $("#HBSessionNumberTypeBinID").val() != -1;
        };

        var checkDateFieldSelected = function () {
            return $("#HBSessionTypeBinID").val() != -1;
        };

        var checkCONFieldSelected = function () {
            return $("#HBSessionContactTypeBinID").val() != -1 || $("#HBSessionTypeBinID").val() != 1 || $("#HBSessionTypeBinID").val() != 3;
        };

        var checkSETFieldSelected = function () {
            return $("#HBSessionSettingTypeBinID").val() != -1 || $("#HBSessionTypeBinID").val() != 1 || $("#HBSessionTypeBinID").val() != 3 ;
        };

        var checkLenFieldSelected = function () {
            return $("HBSessionLengthBinID").val() != 0 || $("#HBSessionTypeBinID").val() == 2;
        };

        var checkPCFieldSelected = function () {
            return $("PatientConfidence").val() != 0 || $("#HBSessionTypeBinID").val() == 2;
        };

        var checkPIFieldSelected = function () {
            return $("PatientImportance").val() != 0 || $("#HBSessionTypeBinID").val() == 2;
        };

        var checkSOCFieldSelected = function () {
            return $("#StateOfChangeBinID").val() != -1 || $("#HBSessionTypeBinID").val() != 1;
        };

        var checkSUBFieldSelected = function () {
            return $("#SubContractorID").val() != -1 || $("#HBSessionTypeBinID").val() != 1;
        };

        var checkCURRFieldSelected = function () {
            return $("#HBSessionCurriculumTypeBinID").val() != -1 || $("#HBSessionTypeBinID").val() == 1;
        };


        $("#AddSessionForm").validate({
            rules: {

                //HBReferralDate: {
                //    required: { depends: checkCompHBFieldSelected }
                //    //required: true

                //},


                //HBSupportSessionDate: {
                //    required: { depends: checkDateFieldSelected }
                //    //required: true

                //},

                HBSessionBarrierTypeBinID: {
                    required: { depends: checkCompFieldSelected }
                    //required: true

                },

                HBSessionNumberTypeBinID: {
                    required: { depends: checkSNFieldSelected },
                    range: ['@ViewBag.SESSIONNUMBERMAX', '@ViewBag.SESSIONNUMBERMAX']
                    //required: true

                },
                HBSessionContactTypeBinID: {
                    required: { depends: checkCONFieldSelected }
                    //required: true

                },
                HBSessionSettingTypeBinID: {
                    required: { depends: checkSETFieldSelected }
                    //required: true

                },
                HBSessionLengthBinID: {
                    required: { depends: checkLenFieldSelected },
                    range: [1, 60]
                    //required: true

                },
                PatientConfidence: {
                    required: { depends: checkPCFieldSelected },
                    range: [1, 10]
                    //required: true

                },
                PatientImportance: {
                    required: { depends: checkPIFieldSelected },
                    range: [1, 10]
                    //required: true

                },
                StateOfChangeBinID: {
                    required: { depends: checkSOCFieldSelected }

                    //required: true

                },
                SubContractorID: {
                    required: { depends: checkSUBFieldSelected }

                    //required: true

                },
                HBSessionCurriculumTypeBinID: {
                    required: { depends: checkCURRFieldSelected }
                    //required: true

                }

            },
            messages: {

                //HBSupportSessionDate: {
                //    required: "Please enter a session date"

                //},


                HBSessionBarrierTypeBinID: {
                    required: "Please enter a barrier to completion"

                },

                HBSessionNumberTypeBinID: {
                    required: "Please enter a session number"

                },
                HBSessionContactTypeBinID: {
                    required: "Please enter a type of contact"

                },
                HBSessionSettingTypeBinID: {
                    required: "Please enter a type of setting"

                },
                HBSessionLengthBinID: {
                    required: "Please enter a session length greater than 0"

                },
                PatientConfidence: {
                    required: "Please enter a value for patient confidence greater than 0"

                },
                PatientImportance: {
                    required: "Please enter a value for patient importance greater than 0"

                },
                StateOfChangeBinID: {
                    required: "Please enter state of change status"

                },
                SubContractorID: {
                    required: "Please enter a location"

                },
                HBSessionCurriculumTypeBinID: {
                    required: "Please enter a type of curriculum"
                }
                //,
                //HBReferralDate: {
                //    required: "Please enter a referral date"

                //}

            }

        });

        $('#EditSessionInfoForm').on("submit", function (evt) {
            evt.preventDefault();
            if ($('#EditSessionInfoForm').valid()) {
                $.ajax({
                    url: $("#EditSessionInfoForm").attr('action'),
                    type: $("#EditSessionInfoForm").attr('method'),
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    data: $("#EditSessionInfoForm").serialize(),
                    success: function (data) {

                        var clinicalcycleid = data.Modified;
                        var siteid = data.Modified2;
                        var screeningtypeid = data.Modified3;
                        var clientid = data.Modified4;
                        var enrollid = data.Modified5;
                        var screeningid = data.Modified6;
                        var supportsessionid = data.Modified7;
                        var saveid = data.Modified8;

                        @*$('#SupportSessionSection').load('@Url.Action("_SupportSessions", "PatientInformation")', { id: clinicalcycleid, id2: siteid, id3: screeningtypeid, id4: clientid, id5: enrollid, id6: screeningid });
                        $('#HealthAssessmentSection').load('@Url.Action("_InitialHealthAssessment", "PatientInformation")', { id: clinicalcycleid, id2: siteid, id3: screeningtypeid, id4: clientid, id5: enrollid, id6: screeningid });*@
                        $('#ContentContainer').load('@Url.Action("Edit", "Screenings", new { id = ViewBag.ScreeningID })');

                        //if (supportsessionid == null && saveid == 1) {

                        //    toastr.success('You have successfully added a session.')

                        //}

                        //else if (supportsessionid == null && saveid == 3) {

                        //    toastr.success('You have successfully updated the session status.')

                        //}
                        //else if (supportsessionid != null && saveid == 2) {

                        //    toastr.success('You have successfully updated a session.')

                        //}
                        //else {

                        //    toastr.warning('You have successfully removed a session.')
                        //}


                    }
                });


            }



        });

    });


    $(document).ready(function () {

        $('#UpdateSIButton').on('click', function (e) {


            var iCurHBReferralDate = $("#HBReferralDate").val();
            var iBPDate = '@ViewBag.BPDate';
            var iStopSub = 0;
            var sErr = "Please correct the following issues:\n\n";

            if (new Date(iCurHBReferralDate).getTime() < new Date(iBPDate).getTime()) {
                iStopSub = 1;
                sErr += "-You cannot add a Referral Date for the DPP/HC/CM Support Session(s) that is earlier than the initial blood pressure date.\n";
            }

            if (iStopSub != 0) {
                alert(sErr);
                e.preventDefault();
            }



        });


     });


</script>

