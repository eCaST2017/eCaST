@model IEnumerable<eCaST.ViewModels.PersonViewModel>

@{
    ViewBag.Title = "Client History";
}


<style type="text/css">
    table.dataTable td.sorting_1 {
        background-color: white;
        border-top: 1px #666;
        border: 2px #666;
    }

    table.dataTable td {
        background-color: white;
        border-top: 1px #666;
        border: 1px #666;
    }

    table.dataTable tr.odd {
        background-color: white;
        border-top: 1px #666;
        border: 1px #666;
    }

    table.dataTable tr.even {
        background-color: white;
        border-top: 1px #666;
        border: 1px #666;
    }

</style>


    <table class="table table-striped table-bordered" id="HistoryList">
    <thead>
        <tr>
            <th>

                @Html.DisplayNameFor(model => model.PersonID)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SiteName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateUpdated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedBy)
            </th>
            @*<th></th>*@
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>
            <td>

                <a class="btn btn-default" style="text-decoration:none" id="EditPersonButton_@item.PersonID" href="#">
                    @Html.DisplayFor(modelItem => item.PersonID)
                </a>


                <script type="text/javascript">

                    $("#EditPersonButton_" + '@item.PersonID').click(function () {


                        $('#PersonSection').load('@Url.Action("Details", "People", new { id = @item.PersonID })');
                        $("#QIContainer").css("display", "none");

                    });

                </script>

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SiteID) @Html.DisplayFor(modelItem => item.SiteName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateUpdated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedBy)
            </td>
            @*<td>
                    @Html.ActionLink("View", "Edit", new { id = item.PersonID }, new { @class="btn btn-default" })
                    @Html.ActionLink("Remove from list", "Delete", new { id = item.PersonID }, new { @class = "btn btn-default" })
                </td>*@
        </tr>
    }

</table>





<script type="text/javascript">


    $(document).ready(function () {
        oTable =
           $('#HistoryList').dataTable({
               "aaSorting": [[0, "desc"]],
              //"bJQueryUI": true,
               "bSortClasses": false,
               "aLengthMenu": [[5, 10, 25, 50, 100, 250, 500, -1], [5, 10, 25, 50, 100, 250, 500, "All"]],
               "sPaginationType": "full_numbers",
               "bPaginate": true,
               //"bStateSave": true,
               //"fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull)
               //{ $('td', nRow).closest('tr').css('background', aData[2] == "Overdue" ? '#ffd9cc' : '#d9ffff'); return nRow; },
               //"fnDrawCallback": function (oSettings) {
               //    for (var i = 0, iLen = oSettings.aoData.length ; i < iLen ; i++) {
               //        var statusP = oSettings.aoData[i]._aData[6];
               //        var status = oSettings.aoData[i]._aData[7];
               //        var statusR = oSettings.aoData[i]._aData[8];
               //        var statusA = oSettings.aoData[i]._aData[9];
               //        var colorCSS;

               //        if (statusP == 'Low') {
               //            colorCSS = 'statusGreen';
               //        } else if (statusP === 'Medium') {
               //            colorCSS = 'statusBlue';
               //        } else if (statusP === 'High') {
               //            colorCSS = 'statusRed';
               //        } else if (statusP === 'Urgent') {
               //            colorCSS = 'statusOrange';
               //        } else {
               //            colorCSS = 'statusBlack';
               //        }




               //        if (status == '0') {

               //            if (statusA == 'False') {

               //                colorCSS = 'statusRed';

               //            }
               //            else {

               //                colorCSS = 'statusGreen';
               //            }

               //        } else if (status === '1') {


               //            if (statusR == 'False') {

               //                colorCSS = 'statusRed';

               //            }
               //            else {

               //                colorCSS = 'statusGreen';
               //            }

               //        }

               //        //else {
               //        //    colorCSS = 'statusBlack';
               //        //}
               //        oSettings.aoData[i].nTr.className += " " + colorCSS;
               //    }

               //},
               //"aoColumnDefs": [
               //    { "bVisible": false, "aTargets": [7] },
               //    { "bVisible": false, "aTargets": [8] },
               //    { "bVisible": false, "aTargets": [9] },
               //],
               "oLanguage": { "sSearch": "Filter: " }
           }); $('#example_filter label input:text').focus();



        oTable.fnSort([[4, 'desc']]); // Sort by first column descending

    });





</script>



