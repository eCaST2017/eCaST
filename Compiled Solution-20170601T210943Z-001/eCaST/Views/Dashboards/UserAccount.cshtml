
@model CTL.ViewModels.UserProfileViewModel
@{
    ViewBag.Title = "User Profile";
    Layout = "~/Views/Shared/_PageLayout.cshtml";
    
    
}

@Html.Hidden("ACUrl", Url.Action("AccountControlUser", "Dashboards", new { id = ViewBag.UID }))
@Html.Hidden("ACOrgUrl", Url.Action("Details", "Organizations", new { id = ViewBag.OID }))

@*@Html.Hidden("OPUrl", Url.Action("OpportunityList", "Posts"))ltkgt,otiyklthkg;.,nihjykuly9uioylhpylpr0t
@Html.Hidden("FLUrl", Url.Action("MemberList", "UserProfiles"))
@Html.Hidden("ORUrl", Url.Action("_OrganizationList", "Organizations"))*@

<div class="alert alert-default">
    <br />
    <div class="alert alert-info">


        <div class="btn-group">
            @*<button class="btn btn-info" id="NameLinkInline" type="button">Connection Dashboard</button>*@

            <a style="text-decoration:none" href='@Url.Action("UserAccount", new { Controller = "Dashboards", id = ViewBag.UID })'>
                <span class="btn btn-info">My Dashboard</span>
            </a>


            @*<button id="ProfileLinkInline" type="button" class="btn btn-default">My Profile</button>*@
            <a style="text-decoration:none" href='@Url.Action("Edit", new { Controller = "UserProfiles", id = ViewBag.UID })'>
                <span class="btn btn-default">My Profile</span>
            </a>


            @if (ViewBag.OCount != null) { 

            <a style="text-decoration:none" href='@Url.Action("Details", new { Controller = "Organizations", id = ViewBag.OID })'>
                <span class="btn btn-default">@ViewBag.OName</span>
            </a>

            }
            else
            {

                <a style="text-decoration:none" data-toggle="modal" data-target="#AwardModal" href='#'>
                    <span class="btn btn-default"><span style="color:#ff6a00" class="glyphicon glyphicon-star"></span>&nbsp;Awarded Opportunities&nbsp;<span class="badge pull-right">@ViewBag.AwardCount</span></span>
                </a>


            }

        </div>

    </div>
    <br />

    <div>
        <div class="row">


            @*@{ Html.RenderAction("AccountControlUser", "Dashboards", new { id = ViewBag.UID });}*@


            <div id="AccountControlContainer"></div>


        </div>
        <!--/row-->
    </div>

    <!-- Modal -->
    <div style="z-index:9999" class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 style="font-family:'Roboto', sans-serif; font-size:28px" class="modal-title" id="myModalLabel">Edit Profile</h4>
                </div>
                <div class="modal-body">
                    @*<a id="ProfileLink" href="@Url.Action("Edit", "UserProfiles", new { id = Model.UserId, id2 = "User" })">Edit Profile</a>*@
                    @*@{ Html.RenderAction("Edit", "UserProfiles", new { id = Model.Id, id2 = "User" });}*@


                    <div class="modal-footer">

                        <div style="width:100%">



                            <div style="float:right; padding-top:24px">

                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="button" id="UpdateProfileButton" class="btn btn-success" data-dismiss="modal">Update</button>





                            </div>

                        </div>

                    </div>



                </div>
            </div>
        </div>

    </div>


</div>



@section Scripts{


<script type="text/javascript">



    var images = [
"../../Content/images/pic8.jpg"

    ];


    var index = 0, oldIndex;

    //$(document).ready(function () {

    $(function () {



        // Call backstretch for the first time,
        // In this case, I"m settings speed of 500ms for a fadeIn effect between images.
        index = Math.floor((Math.random() * images.length));
        $.backstretch(images[index], {
            speed: 1000
        });

        // Set an interval that increments the index and sets the new image
        // Note: The fadeIn speed set above will be inherited
        //

        //setInterval(function () {
        //    oldIndex = index;
        //    while (oldIndex == index) {
        //        index = Math.floor((Math.random() * images.length));
        //    }
        //    $.backstretch(images[index]);
        //}, 5000);

        // A little script for preloading all of the images
        // It"s not necessary, but generally a good idea
        $(images).each(function () {
            $("<img />")[0].src = this;
        });

    });

</script>







}